{
    "openapi": "3.0.0",
    "info": {
        "title": "Taxi Booking System API",
        "description": "API documentation for the Taxi Booking System backend.",
        "contact": {
            "name": "Mizanur Islam Laskar",
            "email": "cicakemizan@gmail.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api/v1",
            "description": "Development Server"
        }
    ],
    "paths": {
        "/airports/active": {
            "get": {
                "tags": [
                    "Airports"
                ],
                "summary": "Get a list of all active airports",
                "description": "Get all active airports.\nGET /api/v1/airports/active",
                "operationId": "54ec5f4bd3a5e720af6df3caf1a2f0ef",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Active airports retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Airport"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/airports": {
            "get": {
                "tags": [
                    "Airports"
                ],
                "summary": "Get a list of all airports (active and inactive)",
                "description": "Get all airports.\nGET /api/v1/airports",
                "operationId": "e6b77353ccf55d058e2bd100e574fab5",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Airports retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Airport"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Airports"
                ],
                "summary": "Create a new airport",
                "description": "Create a new airport.\nPOST /api/v1/airports",
                "operationId": "65248277b9a813dc50ecdafddc76d439",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAirportRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Airport created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Airport created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Airport"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/airports/{id}": {
            "get": {
                "tags": [
                    "Airports"
                ],
                "summary": "Get airport details by ID",
                "description": "Get a single airport by ID.\nGET /api/v1/airports/{id}",
                "operationId": "4592e6add53e70cb11776641d0fab720",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the airport to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Airport retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Airport"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Airport not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Airports"
                ],
                "summary": "Update an existing airport",
                "description": "Update an existing airport.\nPUT /api/v1/airports/{id}",
                "operationId": "3600bc031e7034e43541dc03263ba01f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the airport to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAirportRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Airport updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Airport updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Airport"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Airport not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "409": {
                        "description": "Conflict - Duplicate Entry"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Airports"
                ],
                "summary": "Delete an airport by ID",
                "description": "Delete an airport.\nDELETE /api/v1/airports/{id}",
                "operationId": "457d2d8a1be5f6d39792e231e8019378",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the airport to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Airport deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Airport deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Airport not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/cars/{id}": {
            "get": {
                "tags": [
                    "Car Features"
                ],
                "summary": "Get a single car by ID including its associated slab fares",
                "operationId": "d414ed568a29bbced18959273d48ad78",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the car to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Car and associated slabs retrieved successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "car": {
                                                    "$ref": "#/components/schemas/Car"
                                                },
                                                "slabs": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/CarSlabFare"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Car not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Car with ID 1 not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve car and its slabs due to a database error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Car Features"
                ],
                "summary": "Update an existing car",
                "operationId": "9897d998ad3b531e27086a3d9b07517f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the car to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CarUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Car updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Car"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Car not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Car with ID 1 not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "color": [
                                                    "The color field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update car due to a database error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Car Features"
                ],
                "summary": "Delete a car by ID",
                "operationId": "e8aa7bc6b4d8140df37275effab0375e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the car to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Car deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Car deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Car not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Car with ID 1 not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to delete car due to a database error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cars": {
            "get": {
                "tags": [
                    "Car Features"
                ],
                "summary": "Get a list of all cars",
                "operationId": "c8009ac7f2ed48cb8a7b426d0f71fb1c",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Car"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve cars due to a database error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Car Features"
                ],
                "summary": "Create a new car",
                "operationId": "5a0050447261a82367ba392f0cf9dba5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CarCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Car created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Car"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "regular_name": [
                                                    "The regular name field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create car due to a database error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cars/{carId}/slabs": {
            "post": {
                "tags": [
                    "Car Features"
                ],
                "summary": "Assign or update pricing slabs for a specific car",
                "description": "This operation will delete all existing slab associations for the car and then insert the new ones provided.",
                "operationId": "9a2564cf41675bf30ab3a1e7e9227d84",
                "parameters": [
                    {
                        "name": "carId",
                        "in": "path",
                        "description": "ID of the car to assign slabs to",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CarAssignSlabsRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Slabs assigned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Slabs assigned to car successfully."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CarSlabFare"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Car not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Car with ID 1 not found. Cannot assign slabs."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "slabs.0.slab_id": [
                                                    "Each slab entry must have a slab ID."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to assign slabs to car due to a database error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cars/{carId}/slabs/{slabFareId}": {
            "put": {
                "tags": [
                    "Car Features"
                ],
                "summary": "Update an existing car slab fare entry",
                "description": "Update an existing car slab fare entry.",
                "operationId": "f575a5ed353affe45b45565269daa6e8",
                "parameters": [
                    {
                        "name": "carId",
                        "in": "path",
                        "description": "ID of the car to which the slab fare belongs",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "slabFareId",
                        "in": "path",
                        "description": "ID of the car slab fare entry to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCarSlabFareRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Car slab fare updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CarSlabFare"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found (car or car slab fare)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Car with ID 1 not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "fare_amount": [
                                                    "Fare amount must be at least 0."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update car slab fare due to a database error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Car Features"
                ],
                "summary": "Delete a specific car slab fare entry",
                "description": "Delete a specific car slab fare entry.",
                "operationId": "fa03c1e75a091152d1513d79f77ba109",
                "parameters": [
                    {
                        "name": "carId",
                        "in": "path",
                        "description": "ID of the car to which the slab fare belongs",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "slabFareId",
                        "in": "path",
                        "description": "ID of the car slab fare entry to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Car slab fare deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Car slab fare deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found (car or car slab fare)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Car with ID 1 not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to delete car slab fare due to a database error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/settings": {
            "get": {
                "tags": [
                    "Common Settings"
                ],
                "summary": "Get the single common settings record",
                "description": "Get the single common settings record.\nGET /api/v1/settings",
                "operationId": "69797c186a0ac2f138a88e19645b79e8",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Common settings retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CommonSetting"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Common settings not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Common Settings"
                ],
                "summary": "Update the existing common settings record",
                "description": "Update the existing common settings record.\nPUT /api/v1/settings",
                "operationId": "4fb02d89bd5255ba465a7af3deac28cd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCommonSettingRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Common settings updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Common settings updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CommonSetting"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Common settings not found"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Common Settings"
                ],
                "summary": "Create the initial common settings record",
                "description": "Create the initial common settings record.\nPOST /api/v1/settings\nThis endpoint should only be called once to initialize settings.",
                "operationId": "738b30e0ffe1af95bcb315effeebd4bf",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCommonSettingRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Common settings created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Common settings created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CommonSetting"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Common settings already exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Common settings already exist. Use the update API instead."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/extra-charges": {
            "get": {
                "tags": [
                    "Extra Charges / Toll"
                ],
                "summary": "Get a list of all extra charges",
                "description": "Get all extra charges.\nGET /api/v1/extra-charges",
                "operationId": "bbb869b8022d305ee98a77120f01ea0c",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ExtraCharge"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve extra charges due to a database error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Extra Charges / Toll"
                ],
                "summary": "Create a new extra charge",
                "description": "Create a new extra charge.\nPOST /api/v1/extra-charges",
                "operationId": "1af4d66f73489513c306d9c264769ff1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateExtraChargeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Extra charge created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExtraCharge"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "area_name": [
                                                    "Area name is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create extra charge due to a database error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/extra-charges/{id}": {
            "get": {
                "tags": [
                    "Extra Charges / Toll"
                ],
                "summary": "Get a single extra charge by ID",
                "description": "Get a single extra charge by ID.\nGET /api/v1/extra-charges/{id}",
                "operationId": "bc647ca07c9e2bc37add56bd5e110eeb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the extra charge to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExtraCharge"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Extra charge not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Extra Charge with ID 1 not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve extra charge due to a database error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Extra Charges / Toll"
                ],
                "summary": "Update an existing extra charge",
                "description": "Update an existing extra charge.\nPUT /api/v1/extra-charges/{id}",
                "operationId": "ebe39e9712848076a3c1fd2dcb30fd30",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the extra charge to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateExtraChargeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Extra charge updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExtraCharge"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Extra charge not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Extra Charge with ID 1 not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "extra_charge": [
                                                    "Extra charge must be at least 0."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update extra charge due to a database error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Extra Charges / Toll"
                ],
                "summary": "Delete an extra charge by ID",
                "description": "Delete an extra charge by ID.\nDELETE /api/v1/extra-charges/{id}",
                "operationId": "840e2c52af2aabc79e36916cf5d6d8a9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the extra charge to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Extra charge deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Extra charge deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Extra charge not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Extra Charge with ID 1 not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to delete extra charge due to a database error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/fare-calculation": {
            "post": {
                "tags": [
                    "Fare Calculation"
                ],
                "summary": "Calculate the estimated fare for a booking",
                "description": "Calculate the estimated fare for a booking.\nPOST /api/v1/fare-calculation",
                "operationId": "d13ccb57a4da644cf9c6a7942200eca8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "service_type",
                                    "pickup_date",
                                    "pickup_time",
                                    "adults"
                                ],
                                "properties": {
                                    "service_type": {
                                        "type": "string",
                                        "enum": [
                                            "from_airport",
                                            "to_airport",
                                            "door_to_door"
                                        ],
                                        "example": "door_to_door"
                                    },
                                    "pickup_lat": {
                                        "description": "Required for door_to_door or to_airport",
                                        "type": "number",
                                        "format": "float",
                                        "example": 42.3601
                                    },
                                    "pickup_lng": {
                                        "description": "Required for door_to_door or to_airport",
                                        "type": "number",
                                        "format": "float",
                                        "example": -71.0589
                                    },
                                    "pickup_zip_code": {
                                        "description": "Required for door_to_door or to_airport",
                                        "type": "string",
                                        "example": "02108"
                                    },
                                    "dropoff_lat": {
                                        "description": "Required for door_to_door or from_airport",
                                        "type": "number",
                                        "format": "float",
                                        "example": 42.3736
                                    },
                                    "dropoff_lng": {
                                        "description": "Required for door_to_door or from_airport",
                                        "type": "number",
                                        "format": "float",
                                        "example": -71.1097
                                    },
                                    "dropoff_zip_code": {
                                        "description": "Required for door_to_door or from_airport",
                                        "type": "string",
                                        "example": "02138"
                                    },
                                    "pickup_airport_id": {
                                        "description": "Required if service_type is 'from_airport'",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "dropoff_airport_id": {
                                        "description": "Required if service_type is 'to_airport'",
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "pickup_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-07-30"
                                    },
                                    "pickup_time": {
                                        "type": "string",
                                        "example": "14:00"
                                    },
                                    "adults": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "children": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "infant_seats": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "toddler_seats": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "booster_seats": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "stopovers": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "car_id": {
                                        "description": "Optional: ID of the selected car",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Fare calculated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Fare calculated successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "base_fare": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 25
                                                },
                                                "distance_km": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 10.5
                                                },
                                                "duration_minutes": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "child_seat_cost": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 0
                                                },
                                                "stopover_cost": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 0
                                                },
                                                "extra_charges_total": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 5
                                                },
                                                "extra_toll_charges_total": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 3
                                                },
                                                "airport_toll": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 0
                                                },
                                                "airport_parking_surcharge": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 0
                                                },
                                                "total_fare": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 33
                                                },
                                                "details": {
                                                    "description": "Additional calculation details",
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to calculate fare."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/google-api-keys/active": {
            "get": {
                "tags": [
                    "Google API Keys"
                ],
                "summary": "Get a list of all active keys",
                "description": "Get all active keys.\nGET /api/v1/google-api-keys/active",
                "operationId": "da6dc40fc0439f81f5ca14bb331066e3",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Active keys retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/GoogleApiKey"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/google-api-keys/active/single": {
            "get": {
                "tags": [
                    "Google API Keys"
                ],
                "summary": "Get one active Google API key",
                "description": "Get one active Google API key.\nGET /api/v1/google-api-keys/active/single",
                "operationId": "9d100497110a2fb7561d2b653d68ef01",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Active key retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/GoogleApiKey"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No active key found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/google-api-keys": {
            "get": {
                "tags": [
                    "Google API Keys"
                ],
                "summary": "Get a list of all keys (active and inactive)",
                "description": "Get all keys.\nGET /api/v1/google-api-keys",
                "operationId": "f0e0211e2adf6a55d446752f47893b00",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Keys retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/GoogleApiKey"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Google API Keys"
                ],
                "summary": "Create a new key",
                "description": "Create a new key.\nPOST /api/v1/google-api-keys",
                "operationId": "87afacf3245f6b66e3b89ed442b565a2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateGoogleApiKeyRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Key created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Key created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/GoogleApiKey"
                                        }
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/google-api-keys/{id}": {
            "get": {
                "tags": [
                    "Google API Keys"
                ],
                "summary": "Get key details by ID",
                "description": "Get a single key by ID.\nGET /api/v1/google-api-keys/{id}",
                "operationId": "3dee278f408b154637aa99e629c5405f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the key to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Key retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/GoogleApiKey"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Key not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Google API Keys"
                ],
                "summary": "Update an existing key",
                "description": "Update an existing key.\nPUT /api/v1/google-api-keys/{id}",
                "operationId": "f952cdcff6950713d42c75690a1f439a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the key to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateGoogleApiKeyRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Key updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Key updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/GoogleApiKey"
                                        }
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Key not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/locations/suggest": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "Get location suggestions based on user input (at least 2 characters)",
                "description": "Get location suggestions based on user input.\nGET /api/v1/locations/suggest",
                "operationId": "8d3e813a011d200fb8f3caa18a4e3a2f",
                "parameters": [
                    {
                        "name": "input",
                        "in": "query",
                        "description": "The partial location string (at least 2 characters) for which to get suggestions.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "minLength": 2,
                            "example": "Na"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Location suggestions retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "place_id": {
                                                        "type": "string",
                                                        "example": "ChIJ7cv00DwsDogRAMDACuHnQJQ"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Nashville, TN, USA"
                                                    },
                                                    "matched_substrings": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object"
                                                        }
                                                    },
                                                    "terms": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request (e.g., input too short)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Input must be at least 2 characters long."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/slabs/{id}": {
            "get": {
                "tags": [
                    "Slab Settings"
                ],
                "summary": "Get a single slab by ID",
                "operationId": "5708bf705bbae4f21c37460d08627570",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the slab to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Slab"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Slab not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Slab with ID 1 not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve slab due to a database error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Slab Settings"
                ],
                "summary": "Update an existing slab",
                "operationId": "a0f86608476966bdcc7392473ab2fd94",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the slab to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SlabUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Slab updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Slab"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Slab not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Slab with ID 1 not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "slab_value": [
                                                    "Slab value must be a number."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update slab due to a database error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Slab Settings"
                ],
                "summary": "Delete a slab by ID",
                "operationId": "86a0a288461c4454f9dddf25df413d88",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the slab to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Slab deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Slab deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Slab not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Slab with ID 1 not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to delete slab due to a database error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/slabs": {
            "get": {
                "tags": [
                    "Slab Settings"
                ],
                "summary": "Get a list of all slabs",
                "operationId": "72907f0f363bf5be15e6ae8c15c4e9ad",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Slab"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve slabs due to a database error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Slab Settings"
                ],
                "summary": "Create a new slab",
                "operationId": "9f35e4d498a55a6bfe315f2036c12357",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SlabCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Slab created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Slab"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "slab_value": [
                                                    "Slab value is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create slab due to a database error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sms-services": {
            "get": {
                "tags": [
                    "SMS Services"
                ],
                "summary": "Get a list of all SMS service entries",
                "description": "Get all SMS service entries.\nGET /api/v1/sms-services",
                "operationId": "691d990247c0e57889420efe732ad9ca",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SmsService"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve SMS services due to a database error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "SMS Services"
                ],
                "summary": "Create a new SMS service entry",
                "description": "Create a new SMS service entry.\nPOST /api/v1/sms-services",
                "operationId": "c1c01aa71efba4e0ec99607d449d4059",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSmsServiceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "SMS service entry created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SmsService"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "phone_number": [
                                                    "Phone number is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create SMS service due to a database error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sms-services/{id}": {
            "get": {
                "tags": [
                    "SMS Services"
                ],
                "summary": "Get a single SMS service entry by ID",
                "description": "Get a single SMS service entry by ID.\nGET /api/v1/sms-services/{id}",
                "operationId": "c529165bbb363aeb0fa74ac0f8624ee1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the SMS service entry to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SmsService"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "SMS service entry not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "SMS Service with ID 1 not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve SMS service due to a database error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "SMS Services"
                ],
                "summary": "Update an existing SMS service entry",
                "description": "Update an existing SMS service entry.\nPUT /api/v1/sms-services/{id}",
                "operationId": "30eed882ea72e97be0fe658afe9e222c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the SMS service entry to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSmsServiceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "SMS service entry updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SmsService"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "SMS service entry not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "SMS Service with ID 1 not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "phone_number": [
                                                    "Phone number format is invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update SMS service due to a database error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "SMS Services"
                ],
                "summary": "Delete an SMS service entry by ID",
                "description": "Delete an SMS service entry by ID.\nDELETE /api/v1/sms-services/{id}",
                "operationId": "9bfd2fd2eb7597d0017493852ee0176f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the SMS service entry to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SMS service entry deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "SMS service deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "SMS service entry not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "SMS Service with ID 1 not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to delete SMS service due to a database error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tunnel-charges": {
            "get": {
                "tags": [
                    "Tunnel Charges"
                ],
                "summary": "Get a list of all tunnel charges",
                "description": "Get all tunnel charges.\nGET /api/v1/tunnel-charges",
                "operationId": "6618918f67a00ad7e160119bb979b7f9",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TunnelCharge"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve tunnel charges due to a database error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Tunnel Charges"
                ],
                "summary": "Create a new tunnel charge",
                "description": "Create a new tunnel charge.\nPOST /api/v1/tunnel-charges",
                "operationId": "ce6121a69a9e19ed909454e81b9461fb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTunnelChargeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Tunnel charge created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TunnelCharge"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "charge_start_date": [
                                                    "Charge start date is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create tunnel charge due to a database error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tunnel-charges/{id}": {
            "get": {
                "tags": [
                    "Tunnel Charges"
                ],
                "summary": "Get a single tunnel charge by ID",
                "description": "Get a single tunnel charge by ID.\nGET /api/v1/tunnel-charges/{id}",
                "operationId": "e70723b2710e69081af866d500a74f5b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the tunnel charge to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TunnelCharge"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tunnel charge not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tunnel Charge with ID 1 not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve tunnel charge due to a database error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Tunnel Charges"
                ],
                "summary": "Update an existing tunnel charge",
                "description": "Update an existing tunnel charge.\nPUT /api/v1/tunnel-charges/{id}",
                "operationId": "f54debae49bd02f8468273fff832f15a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the tunnel charge to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTunnelChargeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tunnel charge updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TunnelCharge"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tunnel charge not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tunnel Charge with ID 1 not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "charge_amount": [
                                                    "Charge amount must be at least 0."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update tunnel charge due to a database error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tunnel Charges"
                ],
                "summary": "Delete a tunnel charge by ID",
                "description": "Delete a tunnel charge by ID.\nDELETE /api/v1/tunnel-charges/{id}",
                "operationId": "539f378de2463d1c417a541703dc541d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the tunnel charge to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tunnel charge deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tunnel charge deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tunnel charge not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tunnel Charge with ID 1 not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to delete tunnel charge due to a database error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "CreateAirportRequest": {
                "title": "CreateAirportRequest",
                "required": [
                    "name",
                    "from_tax_toll",
                    "to_tax_toll",
                    "status"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "New Airport Name"
                    },
                    "description": {
                        "type": "string",
                        "example": "Description of the new airport.",
                        "nullable": true
                    },
                    "from_tax_toll": {
                        "type": "number",
                        "format": "float",
                        "example": 10
                    },
                    "to_tax_toll": {
                        "type": "number",
                        "format": "float",
                        "example": 15
                    },
                    "status": {
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    }
                },
                "type": "object"
            },
            "UpdateAirportRequest": {
                "title": "UpdateAirportRequest",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Updated Airport Name"
                    },
                    "description": {
                        "type": "string",
                        "example": "Updated description.",
                        "nullable": true
                    },
                    "from_tax_toll": {
                        "type": "number",
                        "format": "float",
                        "example": 12
                    },
                    "to_tax_toll": {
                        "type": "number",
                        "format": "float",
                        "example": 18
                    },
                    "status": {
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 0
                    }
                },
                "type": "object"
            },
            "Airport": {
                "title": "Airport",
                "description": "Airport model representing a location with associated tax/toll.",
                "required": [
                    "name",
                    "from_tax_toll",
                    "to_tax_toll",
                    "status"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Dhaka International Airport"
                    },
                    "description": {
                        "type": "string",
                        "example": "Main international airport in Bangladesh.",
                        "nullable": true
                    },
                    "from_tax_toll": {
                        "type": "number",
                        "format": "float",
                        "example": 5.5
                    },
                    "to_tax_toll": {
                        "type": "number",
                        "format": "float",
                        "example": 6
                    },
                    "status": {
                        "description": "0 = Inactive, 1 = Active",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "type": "object"
            },
            "Car Features": {
                "title": "Car Features",
                "description": "Represents a car vehicle available for booking.",
                "required": [
                    "regular_name",
                    "color",
                    "car_photo",
                    "car_features",
                    "base_fare",
                    "minimum_fare",
                    "small_luggage_capacity",
                    "large_luggage_capacity",
                    "num_of_passengers",
                    "is_child_seat",
                    "status"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "regular_name": {
                        "description": "Full name of the car.",
                        "type": "string",
                        "example": "2 Passenger Luxury Minivan"
                    },
                    "short_name": {
                        "description": "Short name or alias for the car.",
                        "type": "string",
                        "example": "2pv Luxury Vehicle",
                        "nullable": true
                    },
                    "color": {
                        "description": "Color of the car.",
                        "type": "string",
                        "example": "Silver"
                    },
                    "car_photo": {
                        "description": "Absolute URL to the car's photo.",
                        "type": "string",
                        "example": "http://localhost:8000/uploads/cars/1721904000.webp"
                    },
                    "car_features": {
                        "description": "Features of the car, can be HTML content.",
                        "type": "string",
                        "example": "Air Conditioning, GPS, Bluetooth"
                    },
                    "base_fare": {
                        "description": "Base fare for the car.",
                        "type": "number",
                        "format": "float",
                        "example": 25
                    },
                    "minimum_fare": {
                        "description": "Minimum fare for the car.",
                        "type": "number",
                        "format": "float",
                        "example": 60
                    },
                    "small_luggage_capacity": {
                        "description": "Capacity for small luggage.",
                        "type": "integer",
                        "example": 1
                    },
                    "large_luggage_capacity": {
                        "description": "Capacity for large luggage.",
                        "type": "integer",
                        "example": 2
                    },
                    "extra_luggage_capacity": {
                        "description": "Capacity for extra luggage.",
                        "type": "integer",
                        "example": 0
                    },
                    "num_of_passengers": {
                        "description": "Maximum number of passengers.",
                        "type": "integer",
                        "example": 2
                    },
                    "is_child_seat": {
                        "description": "Child seat availability: 0 = Not Available, 1 = Available.",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    },
                    "status": {
                        "description": "Status of the car: 0 = Inactive, 1 = Active.",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2025-07-25 10:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2025-07-25 10:00:00"
                    }
                },
                "type": "object"
            },
            "CarSlabFare": {
                "title": "Car Slab Fare",
                "description": "Represents the fare amount for a specific car and slab combination.",
                "required": [
                    "car_id",
                    "slab_id",
                    "fare_amount",
                    "status"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "car_id": {
                        "description": "The ID of the car.",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "slab_id": {
                        "description": "The ID of the associated slab.",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "fare_amount": {
                        "description": "The fare amount for this car-slab combination.",
                        "type": "number",
                        "format": "float",
                        "example": 5
                    },
                    "status": {
                        "description": "Status of the fare: 0 = Inactive, 1 = Active.",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2025-07-25 10:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2025-07-25 10:00:00"
                    }
                },
                "type": "object"
            },
            "CommonSetting": {
                "title": "Common Settings",
                "description": "Global application settings.",
                "required": [
                    "company_name",
                    "address",
                    "email",
                    "telephone_number",
                    "status"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "company_name": {
                        "type": "string",
                        "example": "Taxi Co. Ltd."
                    },
                    "company_logo": {
                        "description": "Absolute URL to the company logo image.",
                        "type": "string",
                        "example": "http://localhost:8000/uploads/company/company_logo.png",
                        "nullable": true
                    },
                    "address": {
                        "type": "string",
                        "example": "123 Main St, City, State, Zip"
                    },
                    "booking_call_number": {
                        "type": "string",
                        "example": "+11234567890",
                        "nullable": true
                    },
                    "telephone_number": {
                        "type": "string",
                        "example": "+19876543210"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "info@taxico.com"
                    },
                    "website": {
                        "type": "string",
                        "format": "url",
                        "example": "https://www.taxico.com",
                        "nullable": true
                    },
                    "holidays": {
                        "description": "JSON encoded string of holiday dates.",
                        "type": "string",
                        "example": "[\"2025-12-25\", \"2026-01-01\"]",
                        "nullable": true
                    },
                    "holiday_surcharge": {
                        "type": "number",
                        "format": "float",
                        "example": 10.5,
                        "nullable": true
                    },
                    "tunnel_charge": {
                        "type": "number",
                        "format": "float",
                        "example": 2.75,
                        "nullable": true
                    },
                    "gratuity": {
                        "type": "number",
                        "format": "float",
                        "example": 15,
                        "nullable": true
                    },
                    "stop_over_charge": {
                        "type": "number",
                        "format": "float",
                        "example": 5,
                        "nullable": true
                    },
                    "infant_front_facing_seat_charge": {
                        "type": "number",
                        "format": "float",
                        "example": 10,
                        "nullable": true
                    },
                    "infant_booster_seat_charge": {
                        "type": "number",
                        "format": "float",
                        "example": 7,
                        "nullable": true
                    },
                    "night_charge": {
                        "type": "number",
                        "format": "float",
                        "example": 20,
                        "nullable": true
                    },
                    "night_charge_start_time": {
                        "type": "string",
                        "format": "time",
                        "example": "10:00 PM",
                        "nullable": true
                    },
                    "night_charge_end_time": {
                        "type": "string",
                        "format": "time",
                        "example": "06:00 AM",
                        "nullable": true
                    },
                    "hidden_night_charge": {
                        "type": "number",
                        "format": "float",
                        "example": 10,
                        "nullable": true
                    },
                    "hidden_night_charge_start_time": {
                        "type": "string",
                        "format": "time",
                        "example": "11:00 PM",
                        "nullable": true
                    },
                    "hidden_night_charge_end_time": {
                        "type": "string",
                        "format": "time",
                        "example": "05:00 AM",
                        "nullable": true
                    },
                    "snow_strom_charge": {
                        "type": "number",
                        "format": "float",
                        "example": 12,
                        "nullable": true
                    },
                    "rush_hour_charge": {
                        "type": "number",
                        "format": "float",
                        "example": 8,
                        "nullable": true
                    },
                    "extra_luggage_charge": {
                        "type": "number",
                        "format": "float",
                        "example": 3.5,
                        "nullable": true
                    },
                    "pets_charge": {
                        "type": "number",
                        "format": "float",
                        "example": 15,
                        "nullable": true
                    },
                    "convenience_fee": {
                        "description": "Percentage of total amount.",
                        "type": "number",
                        "format": "float",
                        "example": 2.5,
                        "nullable": true
                    },
                    "cash_discount": {
                        "description": "Percentage of total amount.",
                        "type": "number",
                        "format": "float",
                        "example": 1,
                        "nullable": true
                    },
                    "paypal_charge": {
                        "description": "Percentage of total amount.",
                        "type": "number",
                        "format": "float",
                        "example": 3,
                        "nullable": true
                    },
                    "square_charge": {
                        "description": "Percentage of total amount.",
                        "type": "number",
                        "format": "float",
                        "example": 2.9,
                        "nullable": true
                    },
                    "credit_card_charge": {
                        "description": "Percentage of total amount.",
                        "type": "number",
                        "format": "float",
                        "example": 2.7,
                        "nullable": true
                    },
                    "status": {
                        "description": "0 = Inactive, 1 = Active",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "type": "object"
            },
            "ExtraCharge": {
                "title": "Extra Charge",
                "description": "Represents an extra charge or toll for a specific area defined by zip codes.",
                "required": [
                    "area_name",
                    "zip_codes",
                    "extra_charge",
                    "extra_toll_charge",
                    "status"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "area_name": {
                        "description": "Name of the area where the extra charge applies.",
                        "type": "string",
                        "example": "Downtown Boston"
                    },
                    "zip_codes": {
                        "description": "Comma-separated list of zip codes for the area.",
                        "type": "string",
                        "example": "02108,02109,02110"
                    },
                    "extra_charge": {
                        "description": "The primary extra charge amount.",
                        "type": "number",
                        "format": "float",
                        "example": 2.5
                    },
                    "extra_toll_charge": {
                        "description": "Additional toll charge for the area.",
                        "type": "number",
                        "format": "float",
                        "example": 1.75
                    },
                    "status": {
                        "description": "Status of the extra charge: 0 = Inactive, 1 = Active",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2025-07-26 10:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2025-07-26 10:00:00"
                    }
                },
                "type": "object"
            },
            "GoogleApiKey": {
                "title": "GoogleApiKey",
                "description": "Google API Key Model representing a Google API key.",
                "required": [
                    "api_key",
                    "status"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "api_key": {
                        "type": "string",
                        "example": "A new API Key"
                    },
                    "status": {
                        "description": "0 = Inactive, 1 = Active",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "type": "object"
            },
            "Slab Settings": {
                "title": "Slab Settings",
                "description": "Represents a pricing slab for distance or hourly services.",
                "required": [
                    "slab_value",
                    "slab_unit",
                    "slab_type",
                    "status"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "slab_value": {
                        "description": "The value of the slab (e.g., price per mile/hour).",
                        "type": "number",
                        "format": "float",
                        "example": 6
                    },
                    "slab_unit": {
                        "description": "Unit of the slab: 0 = Mile, 1 = Hour.",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 0
                    },
                    "slab_type": {
                        "description": "Type of service: 0 = Distance, 1 = HourlyService.",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 0
                    },
                    "status": {
                        "description": "Status of the slab: 0 = Inactive, 1 = Active.",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2025-07-25 10:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2025-07-25 10:00:00"
                    }
                },
                "type": "object"
            },
            "SmsService": {
                "title": "SMS Service",
                "description": "Represents an SMS service entry with a phone number and status.",
                "required": [
                    "phone_number",
                    "status"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "phone_number": {
                        "description": "The phone number for the SMS service.",
                        "type": "string",
                        "example": "+1234567890"
                    },
                    "status": {
                        "description": "Status of the SMS service: 0 = Inactive, 1 = Active",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2025-07-26 10:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2025-07-26 10:00:00"
                    }
                },
                "type": "object"
            },
            "TunnelCharge": {
                "title": "Tunnel Charge",
                "description": "Represents a specific tunnel charge entry with start/end dates, amount, and status.",
                "required": [
                    "charge_start_date",
                    "charge_end_date",
                    "charge_amount",
                    "status"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "charge_start_date": {
                        "description": "The start date from which the charge is applicable (YYYY-MM-DD).",
                        "type": "string",
                        "format": "date",
                        "example": "2025-01-01"
                    },
                    "charge_end_date": {
                        "description": "The end date until which the charge is applicable (YYYY-MM-DD).",
                        "type": "string",
                        "format": "date",
                        "example": "2025-12-31"
                    },
                    "charge_amount": {
                        "description": "The amount of the tunnel charge.",
                        "type": "number",
                        "format": "float",
                        "example": 10.5
                    },
                    "status": {
                        "description": "Status of the tunnel charge: 0 = Inactive, 1 = Active",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2025-07-26 10:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2025-07-26 10:00:00"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "Represents a user in the system, typically an administrator.",
                "required": [
                    "name",
                    "email",
                    "password",
                    "status"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Admin User"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "admin@example.com"
                    },
                    "password": {
                        "description": "Hashed password of the user.",
                        "type": "string",
                        "writeOnly": true
                    },
                    "status": {
                        "description": "User status: 0 = Inactive, 1 = Active",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "type": "object"
            },
            "AdminLoginRequest": {
                "title": "Admin Login Request",
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "description": "Administrator's email address.",
                        "type": "string",
                        "format": "email",
                        "example": "admin@example.com"
                    },
                    "password": {
                        "description": "Administrator's password.",
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    }
                },
                "type": "object"
            },
            "CarAssignSlabsRequest": {
                "title": "Car Assign Slabs Request",
                "description": "Request body to assign or update slabs and their fare amounts for a specific car. Multiple entries for the same slab_id are allowed if they represent different fare ranges or conditions.",
                "required": [
                    "slabs"
                ],
                "properties": {
                    "slabs": {
                        "description": "An array of slab assignments for the car. Multiple entries for the same slab ID are permitted if they correspond to different fare conditions (e.g., mileage ranges defined by the slab itself).",
                        "type": "array",
                        "items": {
                            "required": [
                                "slab_id",
                                "fare_amount",
                                "status"
                            ],
                            "properties": {
                                "slab_id": {
                                    "description": "The ID of the slab.",
                                    "type": "integer",
                                    "format": "int64",
                                    "example": 1
                                },
                                "fare_amount": {
                                    "description": "The fare amount for this slab.",
                                    "type": "number",
                                    "format": "float",
                                    "example": 5
                                },
                                "status": {
                                    "description": "Status of the fare: 0 = Inactive, 1 = Active.",
                                    "type": "integer",
                                    "enum": [
                                        0,
                                        1
                                    ],
                                    "example": 1
                                }
                            },
                            "type": "object"
                        },
                        "example": [
                            {
                                "slab_id": 1,
                                "fare_amount": 5,
                                "status": 1
                            },
                            {
                                "slab_id": 1,
                                "fare_amount": 5,
                                "status": 1
                            },
                            {
                                "slab_id": 2,
                                "fare_amount": 4.5,
                                "status": 1
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "CarCreateRequest": {
                "title": "Car Create Request",
                "required": [
                    "regular_name",
                    "color",
                    "car_photo",
                    "car_features",
                    "base_fare",
                    "minimum_fare",
                    "small_luggage_capacity",
                    "large_luggage_capacity",
                    "num_of_passengers",
                    "is_child_seat",
                    "status"
                ],
                "properties": {
                    "regular_name": {
                        "description": "Full name of the car.",
                        "type": "string",
                        "example": "4 Passenger Luxury Vehicle"
                    },
                    "short_name": {
                        "description": "Short name or alias for the car.",
                        "type": "string",
                        "example": "4pv Luxury Vehicle",
                        "nullable": true
                    },
                    "color": {
                        "description": "Color of the car.",
                        "type": "string",
                        "example": "Black"
                    },
                    "car_photo": {
                        "description": "Car photo file. Max 100KB, max dimensions 300x200px. Allowed types: jpg, gif, png, webp.",
                        "type": "string",
                        "format": "binary"
                    },
                    "car_features": {
                        "description": "Features of the car, can be HTML content.",
                        "type": "string",
                        "example": "Air Conditioning, GPS, Bluetooth"
                    },
                    "base_fare": {
                        "description": "Base fare for the car.",
                        "type": "number",
                        "format": "float",
                        "example": 35
                    },
                    "minimum_fare": {
                        "description": "Minimum fare for the car.",
                        "type": "number",
                        "format": "float",
                        "example": 99
                    },
                    "small_luggage_capacity": {
                        "description": "Capacity for small luggage.",
                        "type": "integer",
                        "example": 1
                    },
                    "large_luggage_capacity": {
                        "description": "Capacity for large luggage.",
                        "type": "integer",
                        "example": 4
                    },
                    "extra_luggage_capacity": {
                        "description": "Capacity for extra luggage.",
                        "type": "integer",
                        "example": 0
                    },
                    "num_of_passengers": {
                        "description": "Maximum number of passengers.",
                        "type": "integer",
                        "example": 4
                    },
                    "is_child_seat": {
                        "description": "Child seat availability: 0 = Not Available, 1 = Available.",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    },
                    "status": {
                        "description": "Status of the car: 0 = Inactive, 1 = Active.",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    }
                },
                "type": "object"
            },
            "UpdateCarSlabFareRequest": {
                "title": "Update Car Slab Fare Request",
                "description": "Request body to update a specific car slab fare entry.",
                "properties": {
                    "slab_id": {
                        "description": "The ID of the slab. Must exist in the 'slabs' table.",
                        "type": "integer",
                        "format": "int64",
                        "example": 1,
                        "nullable": true
                    },
                    "fare_amount": {
                        "description": "The updated fare amount for this slab.",
                        "type": "number",
                        "format": "float",
                        "example": 5.5,
                        "nullable": true
                    },
                    "status": {
                        "description": "Status of the fare: 0 = Inactive, 1 = Active.",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "CarUpdateRequest": {
                "title": "Car Update Request",
                "properties": {
                    "regular_name": {
                        "description": "Full name of the car.",
                        "type": "string",
                        "example": "Updated 4 Passenger Luxury Vehicle",
                        "nullable": true
                    },
                    "short_name": {
                        "description": "Short name or alias for the car.",
                        "type": "string",
                        "example": "Updated 4pv Luxury Vehicle",
                        "nullable": true
                    },
                    "color": {
                        "description": "Color of the car.",
                        "type": "string",
                        "example": "Blue",
                        "nullable": true
                    },
                    "car_photo": {
                        "description": "Car photo file. Max 100KB, max dimensions 300x200px. Allowed types: jpg, gif, png, webp. Send null to remove, omit to keep existing.",
                        "type": "string",
                        "format": "binary",
                        "nullable": true
                    },
                    "car_features": {
                        "description": "Features of the car, can be HTML content.",
                        "type": "string",
                        "example": "Updated features: Leather Seats, Sunroof",
                        "nullable": true
                    },
                    "base_fare": {
                        "description": "Base fare for the car.",
                        "type": "number",
                        "format": "float",
                        "example": 38,
                        "nullable": true
                    },
                    "minimum_fare": {
                        "description": "Minimum fare for the car.",
                        "type": "number",
                        "format": "float",
                        "example": 105,
                        "nullable": true
                    },
                    "small_luggage_capacity": {
                        "description": "Capacity for small luggage.",
                        "type": "integer",
                        "example": 2,
                        "nullable": true
                    },
                    "large_luggage_capacity": {
                        "description": "Capacity for large luggage.",
                        "type": "integer",
                        "example": 3,
                        "nullable": true
                    },
                    "extra_luggage_capacity": {
                        "description": "Capacity for extra luggage.",
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "num_of_passengers": {
                        "description": "Maximum number of passengers.",
                        "type": "integer",
                        "example": 5,
                        "nullable": true
                    },
                    "is_child_seat": {
                        "description": "Child seat availability: 0 = Not Available, 1 = Available.",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 0,
                        "nullable": true
                    },
                    "status": {
                        "description": "Status of the car: 0 = Inactive, 1 = Active.",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 0,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "CreateCommonSettingRequest": {
                "title": "Create Common Settings Request",
                "description": "Request body for creating the initial common settings.",
                "required": [
                    "company_name",
                    "address",
                    "email",
                    "telephone_number",
                    "status"
                ],
                "properties": {
                    "company_name": {
                        "type": "string",
                        "example": "New Taxi Co."
                    },
                    "company_logo": {
                        "description": "Company logo image file (jpg, gif, png, webp, max 100KB, max 300x200px).",
                        "type": "string",
                        "format": "binary",
                        "nullable": true
                    },
                    "address": {
                        "type": "string",
                        "example": "456 Oak Ave, Town, State, Zip"
                    },
                    "booking_call_number": {
                        "type": "string",
                        "example": "+1122334455",
                        "nullable": true
                    },
                    "telephone_number": {
                        "type": "string",
                        "example": "+19988776655"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "contact@newtaxico.com"
                    },
                    "website": {
                        "type": "string",
                        "format": "url",
                        "example": "https://www.newtaxico.com",
                        "nullable": true
                    },
                    "holidays": {
                        "description": "JSON string of holiday dates.",
                        "type": "string",
                        "example": "[\"2025-12-25\"]",
                        "nullable": true
                    },
                    "holiday_surcharge": {
                        "type": "number",
                        "format": "float",
                        "example": 10,
                        "nullable": true
                    },
                    "tunnel_charge": {
                        "type": "number",
                        "format": "float",
                        "example": 3,
                        "nullable": true
                    },
                    "gratuity": {
                        "type": "number",
                        "format": "float",
                        "example": 18,
                        "nullable": true
                    },
                    "stop_over_charge": {
                        "type": "number",
                        "format": "float",
                        "example": 6,
                        "nullable": true
                    },
                    "infant_front_facing_seat_charge": {
                        "type": "number",
                        "format": "float",
                        "example": 12,
                        "nullable": true
                    },
                    "infant_rear_facing_seat_charge": {
                        "type": "number",
                        "format": "float",
                        "example": 9,
                        "nullable": true
                    },
                    "infant_booster_seat_charge": {
                        "type": "number",
                        "format": "float",
                        "example": 8,
                        "nullable": true
                    },
                    "night_charge": {
                        "type": "number",
                        "format": "float",
                        "example": 25,
                        "nullable": true
                    },
                    "night_charge_start_time": {
                        "type": "string",
                        "format": "time",
                        "example": "21:00",
                        "nullable": true
                    },
                    "night_charge_end_time": {
                        "type": "string",
                        "format": "time",
                        "example": "07:00",
                        "nullable": true
                    },
                    "hidden_night_charge": {
                        "type": "number",
                        "format": "float",
                        "example": 15,
                        "nullable": true
                    },
                    "hidden_night_charge_start_time": {
                        "type": "string",
                        "format": "time",
                        "example": "00:00",
                        "nullable": true
                    },
                    "hidden_night_charge_end_time": {
                        "type": "string",
                        "format": "time",
                        "example": "04:00",
                        "nullable": true
                    },
                    "snow_strom_charge": {
                        "type": "number",
                        "format": "float",
                        "example": 15,
                        "nullable": true
                    },
                    "rush_hour_charge": {
                        "type": "number",
                        "format": "float",
                        "example": 10,
                        "nullable": true
                    },
                    "extra_luggage_charge": {
                        "type": "number",
                        "format": "float",
                        "example": 4,
                        "nullable": true
                    },
                    "pets_charge": {
                        "type": "number",
                        "format": "float",
                        "example": 20,
                        "nullable": true
                    },
                    "convenience_fee": {
                        "type": "number",
                        "format": "float",
                        "example": 3,
                        "nullable": true
                    },
                    "cash_discount": {
                        "type": "number",
                        "format": "float",
                        "example": 1.5,
                        "nullable": true
                    },
                    "paypal_charge": {
                        "type": "number",
                        "format": "float",
                        "example": 3.5,
                        "nullable": true
                    },
                    "square_charge": {
                        "type": "number",
                        "format": "float",
                        "example": 3.2,
                        "nullable": true
                    },
                    "credit_card_charge": {
                        "type": "number",
                        "format": "float",
                        "example": 3,
                        "nullable": true
                    },
                    "status": {
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    }
                },
                "type": "object"
            },
            "UpdateCommonSettingRequest": {
                "title": "Update Common Settings Request",
                "description": "Request body for updating existing common settings.",
                "properties": {
                    "company_name": {
                        "type": "string",
                        "example": "Updated Taxi Co.",
                        "nullable": true
                    },
                    "company_logo": {
                        "description": "Company logo image file (jpg, gif, png, webp, max 100KB, max 300x200px).",
                        "type": "string",
                        "format": "binary",
                        "nullable": true
                    },
                    "address": {
                        "type": "string",
                        "example": "789 Pine Rd, Village, County, Postcode",
                        "nullable": true
                    },
                    "booking_call_number": {
                        "type": "string",
                        "example": "+1122334455",
                        "nullable": true
                    },
                    "telephone_number": {
                        "type": "string",
                        "example": "+19988776655",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "contact@updatedtaxico.com",
                        "nullable": true
                    },
                    "website": {
                        "type": "string",
                        "format": "url",
                        "example": "https://www.updatedtaxico.com",
                        "nullable": true
                    },
                    "holidays": {
                        "description": "JSON string of holiday dates.",
                        "type": "string",
                        "example": "[\"2026-01-01\"]",
                        "nullable": true
                    },
                    "holiday_surcharge": {
                        "type": "number",
                        "format": "float",
                        "example": 12,
                        "nullable": true
                    },
                    "tunnel_charge": {
                        "type": "number",
                        "format": "float",
                        "example": 3.5,
                        "nullable": true
                    },
                    "gratuity": {
                        "type": "number",
                        "format": "float",
                        "example": 20,
                        "nullable": true
                    },
                    "stop_over_charge": {
                        "type": "number",
                        "format": "float",
                        "example": 7,
                        "nullable": true
                    },
                    "infant_front_facing_seat_charge": {
                        "type": "number",
                        "format": "float",
                        "example": 15,
                        "nullable": true
                    },
                    "infant_rear_facing_seat_charge": {
                        "type": "number",
                        "format": "float",
                        "example": 10,
                        "nullable": true
                    },
                    "infant_booster_seat_charge": {
                        "type": "number",
                        "format": "float",
                        "example": 9,
                        "nullable": true
                    },
                    "night_charge": {
                        "type": "number",
                        "format": "float",
                        "example": 30,
                        "nullable": true
                    },
                    "night_charge_start_time": {
                        "type": "string",
                        "format": "time",
                        "example": "20:00",
                        "nullable": true
                    },
                    "night_charge_end_time": {
                        "type": "string",
                        "format": "time",
                        "example": "08:00",
                        "nullable": true
                    },
                    "hidden_night_charge": {
                        "type": "number",
                        "format": "float",
                        "example": 18,
                        "nullable": true
                    },
                    "hidden_night_charge_start_time": {
                        "type": "string",
                        "format": "time",
                        "example": "23:30",
                        "nullable": true
                    },
                    "hidden_night_charge_end_time": {
                        "type": "string",
                        "format": "time",
                        "example": "04:30",
                        "nullable": true
                    },
                    "snow_strom_charge": {
                        "type": "number",
                        "format": "float",
                        "example": 18,
                        "nullable": true
                    },
                    "rush_hour_charge": {
                        "type": "number",
                        "format": "float",
                        "example": 12,
                        "nullable": true
                    },
                    "extra_luggage_charge": {
                        "type": "number",
                        "format": "float",
                        "example": 5,
                        "nullable": true
                    },
                    "pets_charge": {
                        "type": "number",
                        "format": "float",
                        "example": 25,
                        "nullable": true
                    },
                    "convenience_fee": {
                        "type": "number",
                        "format": "float",
                        "example": 4,
                        "nullable": true
                    },
                    "cash_discount": {
                        "type": "number",
                        "format": "float",
                        "example": 2,
                        "nullable": true
                    },
                    "paypal_charge": {
                        "type": "number",
                        "format": "float",
                        "example": 4,
                        "nullable": true
                    },
                    "square_charge": {
                        "type": "number",
                        "format": "float",
                        "example": 3.5,
                        "nullable": true
                    },
                    "credit_card_charge": {
                        "type": "number",
                        "format": "float",
                        "example": 3.2,
                        "nullable": true
                    },
                    "status": {
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 0,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "CreateExtraChargeRequest": {
                "title": "Create Extra Charge Request",
                "required": [
                    "area_name",
                    "zip_codes",
                    "extra_charge",
                    "extra_toll_charge",
                    "status"
                ],
                "properties": {
                    "area_name": {
                        "description": "Name of the area where the extra charge applies.",
                        "type": "string",
                        "example": "Downtown Boston"
                    },
                    "zip_codes": {
                        "description": "Comma-separated list of zip codes for the area.",
                        "type": "string",
                        "example": "02108,02109,02110"
                    },
                    "extra_charge": {
                        "description": "The primary extra charge amount.",
                        "type": "number",
                        "format": "float",
                        "example": 2.5
                    },
                    "extra_toll_charge": {
                        "description": "Additional toll charge for the area.",
                        "type": "number",
                        "format": "float",
                        "example": 1.75
                    },
                    "status": {
                        "description": "Status of the extra charge: 0 = Inactive, 1 = Active.",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    }
                },
                "type": "object"
            },
            "UpdateExtraChargeRequest": {
                "title": "Update Extra Charge Request",
                "properties": {
                    "area_name": {
                        "description": "Name of the area where the extra charge applies.",
                        "type": "string",
                        "example": "Updated Downtown Boston",
                        "nullable": true
                    },
                    "zip_codes": {
                        "description": "Comma-separated list of zip codes for the area.",
                        "type": "string",
                        "example": "02108,02111",
                        "nullable": true
                    },
                    "extra_charge": {
                        "description": "The primary extra charge amount.",
                        "type": "number",
                        "format": "float",
                        "example": 3,
                        "nullable": true
                    },
                    "extra_toll_charge": {
                        "description": "Additional toll charge for the area.",
                        "type": "number",
                        "format": "float",
                        "example": 2,
                        "nullable": true
                    },
                    "status": {
                        "description": "Status of the extra charge: 0 = Inactive, 1 = Active.",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 0,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "CreateGoogleApiKeyRequest": {
                "title": "Create Google API Key Request",
                "required": [
                    "api_key",
                    "status"
                ],
                "properties": {
                    "api_key": {
                        "type": "string",
                        "example": "NewApiKey"
                    },
                    "status": {
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    }
                },
                "type": "object"
            },
            "UpdateGoogleApiKeyRequest": {
                "title": "Update Google API Key Request",
                "properties": {
                    "api_key": {
                        "type": "string",
                        "example": "UpdatedApiKey",
                        "nullable": true
                    },
                    "status": {
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 0,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SlabCreateRequest": {
                "title": "Slab Create Request",
                "required": [
                    "slab_value",
                    "slab_unit",
                    "slab_type",
                    "status"
                ],
                "properties": {
                    "slab_value": {
                        "description": "The value of the slab (e.g., price per mile/hour).",
                        "type": "number",
                        "format": "float",
                        "example": 7.5
                    },
                    "slab_unit": {
                        "description": "Unit of the slab: 0 = Mile, 1 = Hour.",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 0
                    },
                    "slab_type": {
                        "description": "Type of service: 0 = Distance, 1 = Hourly Service.",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 0
                    },
                    "status": {
                        "description": "Status of the slab: 0 = Inactive, 1 = Active.",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    }
                },
                "type": "object"
            },
            "SlabUpdateRequest": {
                "title": "Slab Update Request",
                "properties": {
                    "slab_value": {
                        "description": "The value of the slab (e.g., price per mile/hour).",
                        "type": "number",
                        "format": "float",
                        "example": 8,
                        "nullable": true
                    },
                    "slab_unit": {
                        "description": "Unit of the slab: 0 = Mile, 1 = Hour.",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1,
                        "nullable": true
                    },
                    "slab_type": {
                        "description": "Type of service: 0 = Distance, 1 = Hourly Service.",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1,
                        "nullable": true
                    },
                    "status": {
                        "description": "Status of the slab: 0 = Inactive, 1 = Active.",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 0,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "CreateSmsServiceRequest": {
                "title": "Create SMS Service Request",
                "required": [
                    "phone_number",
                    "status"
                ],
                "properties": {
                    "phone_number": {
                        "description": "The phone number for the SMS service.",
                        "type": "string",
                        "example": "+1234567890"
                    },
                    "status": {
                        "description": "Status of the SMS service: 0 = Inactive, 1 = Active.",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    }
                },
                "type": "object"
            },
            "UpdateSmsServiceRequest": {
                "title": "Update SMS Service Request",
                "properties": {
                    "phone_number": {
                        "description": "The updated phone number for the SMS service.",
                        "type": "string",
                        "example": "+1987654321",
                        "nullable": true
                    },
                    "status": {
                        "description": "Status of the SMS service: 0 = Inactive, 1 = Active.",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 0,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "CreateTunnelChargeRequest": {
                "title": "Create Tunnel Charge Request",
                "required": [
                    "charge_start_date",
                    "charge_end_date",
                    "charge_amount",
                    "status"
                ],
                "properties": {
                    "charge_start_date": {
                        "description": "The start date from which the charge is applicable (YYYY-MM-DD).",
                        "type": "string",
                        "format": "date",
                        "example": "2025-01-01"
                    },
                    "charge_end_date": {
                        "description": "The end date until which the charge is applicable (YYYY-MM-DD).",
                        "type": "string",
                        "format": "date",
                        "example": "2025-12-31"
                    },
                    "charge_amount": {
                        "description": "The amount of the tunnel charge.",
                        "type": "number",
                        "format": "float",
                        "example": 10.5
                    },
                    "status": {
                        "description": "Status of the tunnel charge: 0 = Inactive, 1 = Active.",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1
                    }
                },
                "type": "object"
            },
            "UpdateTunnelChargeRequest": {
                "title": "Update Tunnel Charge Request",
                "properties": {
                    "charge_start_date": {
                        "description": "The start date from which the charge is applicable (YYYY-MM-DD).",
                        "type": "string",
                        "format": "date",
                        "example": "2025-01-01",
                        "nullable": true
                    },
                    "charge_end_date": {
                        "description": "The end date until which the charge is applicable (YYYY-MM-DD).",
                        "type": "string",
                        "format": "date",
                        "example": "2025-12-31",
                        "nullable": true
                    },
                    "charge_amount": {
                        "description": "The amount of the tunnel charge.",
                        "type": "number",
                        "format": "float",
                        "example": 10.5,
                        "nullable": true
                    },
                    "status": {
                        "description": "Status of the tunnel charge: 0 = Inactive, 1 = Active.",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 1,
                        "nullable": true
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "security": [
        {
            "bearerAuth": []
        }
    ],
    "tags": [
        {
            "name": "Airports",
            "description": "API for managing airport locations."
        },
        {
            "name": "Car Features",
            "description": "API for managing car vehicles and their pricing slabs."
        },
        {
            "name": "Extra Charges / Toll",
            "description": "API for managing extra charges and tolls based on areas/zip codes."
        },
        {
            "name": "Fare Calculation",
            "description": "API for calculating booking fares."
        },
        {
            "name": "Slab Settings",
            "description": "API for managing pricing slabs."
        },
        {
            "name": "SMS Services",
            "description": "API for managing SMS service phone numbers."
        },
        {
            "name": "Tunnel Charges",
            "description": "API for managing tunnel charges."
        },
        {
            "name": "Common Settings",
            "description": "Common Settings"
        },
        {
            "name": "Google API Keys",
            "description": "Google API Keys"
        },
        {
            "name": "Locations",
            "description": "Locations"
        }
    ]
}